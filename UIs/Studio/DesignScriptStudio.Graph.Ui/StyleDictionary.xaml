<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DesignScriptStudio.Graph.Ui">

    <!--  Style for Window Button -->
    <Style x:Key="WindowButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderThickness="1 0 0 0"
                            BorderBrush="#3b3b3b">
                        <ContentPresenter Margin="1 1 0 0"
                                          RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for Dialog Button-->
    <Style x:Key="DialogButton" TargetType="Button">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Background" Height="25" MinWidth="70"
                            CornerRadius="0"
                            BorderThickness="1" BorderBrush="#3b3b3b">
                        <Grid>
                            <Border x:Name="InnerBackground" Background="#444444"
                                    CornerRadius="0"
                                BorderBrush="#4e4e4e" BorderThickness="1"/>
                            <ContentPresenter
                            x:Name="contentPresenter"
                            TextBlock.FontFamily="Segoe UI" TextBlock.FontSize="12" TextBlock.Foreground="#c1c1c1"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="InnerBackground" Property="BorderBrush" Value="#aaaaaa"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#eeeeee"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="InnerBackground" Property="Background" Value="#3d3d3d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for ShortCut Button -->
    <ImageBrush x:Key="ClickBox" ImageSource="/DesignScriptStudio.Graph.Ui;component/Resources/clickbox.png"/>
    <Style x:Key="ShortCutButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Margin="0"
                            Width="24"
                            Height="24"
                            Background="Transparent">
                        <ContentPresenter Margin="0" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ClickBox}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for ToolTip  -->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="Black"
                            Opacity="0.8"
                            BorderBrush="#4e4e4e"
                            BorderThickness="1">
                        <ContentPresenter TextBlock.FontSize="10"
                                          TextBlock.Foreground="White"
                                          Margin="3"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for Library Window Button  -->
    <Style x:Key="LibraryWindowButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="25" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Header"
                            Background="#444444"
                            BorderThickness="0"
                            CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for Library Function Button  -->
    <Style x:Key="FunctionButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="#b8b8b8"
                            BorderThickness="0">
                        <Border x:Name="SubBorder"
                                BorderBrush="#d9d9d9"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#ededed" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#ededed" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="SubBorder" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Library Text  -->
    <Style x:Key="LibraryTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#666666" />
    </Style>

    <!--  Expander Indicator  -->
    <Style x:Key="TreeViewExpanderButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="IsChecked" Value="{Binding IsExpanded, Mode=OneTime,
                                             RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ExpanderButtonBorder">
                        <Grid>
                            <!--<Rectangle Fill="Transparent" />-->
                            <Polygon Name="Indicator"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="#898989"
                                     Points="0,0 6,3 0,6"
                                     RenderTransformOrigin="0.5,0.5"
                                     StrokeThickness="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Change the sign to minus when toggled  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Indicator" Property="Points" Value="0,0 6,0, 3,6" />
                        </Trigger>

                        <!--  MouseOver, Pressed behaviours  -->
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  for scroll bar  -->
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FFd6d6d6" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FFc2c2c2" />

    <!--  SrollViewer ScrollBar Repeat Buttons (The part in the middle, not the thumb the long area between the buttons )  -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollViewer ScrollBar Thumb, that part that can be dragged up/down or left/right Buttons  -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Border Grid.RowSpan="3"
                    Background="White"
                    BorderBrush="#c2c2c2"
                    BorderThickness="1 0 0 0"
                    CornerRadius="0" />
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Margin="0,-1,-1,-1"
                           Background="{StaticResource HorizontalNormalBrush}"
                           BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                           Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <!--  HorizontalScrollBar Template using the previously created Templates  -->
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Border Grid.ColumnSpan="1"
                    Background="White"
                    BorderBrush="#c2c2c2"
                    BorderThickness="0 1 0 0"
                    CornerRadius="0" />
            <Track Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="false">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Margin="-1,0,-1,-1"
                           Background="{StaticResource HorizontalNormalBrush}"
                           BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                           Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <!--  Style for overall  ScrollBar  -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="10" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="10" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Style for overall  ScrollViewer  -->
    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Row="0" Grid.Column="0" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="Visible"
                                   Value="{TemplateBinding VerticalOffset}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for ZoomAndPan Control Button  -->
    <Style x:Key="ZoomAndPanButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Margin" Value="0,0" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderThickness="0"
                            CornerRadius="0">
                        <ContentPresenter VerticalAlignment="Top"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>