<UserControl x:Class="DesignScript.Editor.FindReplacePanel"
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
xmlns:local="clr-namespace:DesignScript.Editor"
mc:Ignorable="d" d:DesignHeight="640" d:DesignWidth="480"
x:Name="DesignScriptEditor">

    <UserControl.Resources>
        <Style x:Key="next" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Button BorderBrush="#FF888888">
                                <Button.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFDFDFD" Offset="0"/>
                                        <GradientStop Color="#FFDADADA" Offset="1"/>
                                    </LinearGradientBrush>
                                </Button.Background>
                            </Button>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Previous" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Button BorderBrush="#FF888888">
                                <Button.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Gainsboro" Offset="1"/>
                                        <GradientStop Color="#FFFCFCFC"/>
                                    </LinearGradientBrush>
                                </Button.Background>
                            </Button>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnGotFocus1"/>
        <Storyboard x:Key="OnGotFocus2"/>
        <Storyboard x:Key="cleartext"/>
        <Storyboard x:Key="testing"/>
        <Style x:Key="Previous1" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Button BorderBrush="#FF888888">
                                <Button.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Gainsboro" Offset="1"/>
                                        <GradientStop Color="#FFFCFCFC"/>
                                    </LinearGradientBrush>
                                </Button.Background>
                            </Button>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="Transparent" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="Transparent" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="Transparent" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="Transparent" VerticalAlignment="Center" Width="19" />
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF000000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OverlayTextBoxStyle" BasedOn="{StaticResource {x:Type TextBox}}"
       TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border BorderThickness="0.5" BorderBrush="Black">
                                <TextBlock x:Name="textBlock" Text="{TemplateBinding Tag}" Visibility="Collapsed" Focusable="False" VerticalAlignment="Top" Margin=" 5 1 0 0" Foreground="Black" Background="Transparent"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False" />
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="textBlock" Value="Visible" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Command="{x:Static local:TextEditorControl.SetAssert}" Key="F1"/>
        <KeyBinding Command="{x:Static local:TextEditorControl.CloseMatchPanel}" Key="Esc"/>
    </UserControl.InputBindings>
    <StackPanel >
        <Grid x:Name="LayoutRoot" ZIndex="1001" >
            <Border BorderThickness="0" HorizontalAlignment="Left" Height="27" Margin="0" VerticalAlignment="Top" Width="162">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0.013"/>
                        <GradientStop Color="#FFEDEDED" Offset="1"/>
                        <GradientStop Color="White"/>
                    </LinearGradientBrush>
                </Border.Background>
                <TextBox x:Name="findTextbox" Style="{DynamicResource OverlayTextBoxStyle}" Margin="2,2,49.167,2" Width="110" Height="21" Foreground="#FF444444" Background="White" AllowDrop="True" BorderBrush="#FF888888" GotFocus="OnFindTextBoxGotFocus" KeyUp="OnFindTextBoxKeyUp">
                    <TextBox.Tag>Find Text</TextBox.Tag>
                </TextBox>
            </Border>
            <Button Content="Down" HorizontalAlignment="Left" Height="21" Margin="115.01,3,0,0" Style="{DynamicResource next}" VerticalAlignment="Top" Width="21" BorderBrush="#FF666666" Click="OnDownArrorClick" ToolTip="Next"/>
            <Label x:Name="next_label" Content="&lt;" IsHitTestVisible="False" HorizontalAlignment="Left" Height="12.875" Margin="117.792,7.375,0,0" VerticalAlignment="Top" Width="9" Panel.ZIndex="1" Padding="0" RenderTransformOrigin="0.5,0.5" Background="Transparent" Foreground="#FF444444">
                <Label.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90.0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Label.RenderTransform>
            </Label>
            <Button Content="Up" HorizontalAlignment="Left" Height="21" Margin="138.341,3,0,0" Style="{DynamicResource Previous}" VerticalAlignment="Top" Width="21" Click="OnUpArrowClick" ToolTip="Prev"/>
            <Label x:Name="prev_label" Content="&lt;" IsHitTestVisible="False" HorizontalAlignment="Left" Height="12.875" Margin="148.095,7.375,0,0" VerticalAlignment="Top" Width="9" Panel.ZIndex="1" Padding="0" RenderTransformOrigin="0.5,0.5" Background="Transparent" Foreground="#FF444444">
                <Label.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Label.RenderTransform>
            </Label>
        </Grid>
        <Canvas>
            <Grid x:Name="ReplacePanel" Visibility="Visible" ZIndex="1002"  GotFocus="OnReplacePanelGotFocus">
                <Grid HorizontalAlignment="Left" Height="20" Margin="0,0.482,0,0" VerticalAlignment="Top" Width="162">
                    <Border x:Name="match_pane" BorderBrush="Gray" BorderThickness="0" Background="#FFEDEDED" Margin="0,-0.25,0,0">
                        <TextBlock x:Name="match_label" Margin="0,3.745,68.604,0" TextWrapping="Wrap" Text="No matches" FontSize="9.333" Foreground="Black" TextAlignment="Center" Height="12.916" VerticalAlignment="Top" d:LayoutOverrides="HorizontalAlignment"/>
                    </Border>
                    <CheckBox x:Name="match_checkbox" Content="Match Case" Margin="0,3.433,1.858,3.317" FontSize="9.333" Foreground="#FF444444" HorizontalAlignment="Right" Width="65.758" Click="OnMatchCaseChecked"/>
                </Grid>
                <Rectangle Fill="#FFD6D6D6" Height="17" Margin="0,20.5,0,0" VerticalAlignment="Top" Width="162"/>
                <Expander x:Name="expander" Header="Replace text" Margin="0,17.232,0,0" VerticalAlignment="Center" Style="{DynamicResource ExpanderStyle1}" FontSize="9.333" Foreground="#FF444444" ExpandDirection="Down" MouseDown="OnExpanderMouseDown">
                    <Grid x:Name="ReplaceGrid" Margin="-1,-2,-1,0" Height="50" Background="#FFEDEDED">
                        <TextBox x:Name="replaceTextbox" Style="{DynamicResource OverlayTextBoxStyle}" Height="20" Margin="3,3,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="10.667" Foreground="#FF444444" Width="155.5" HorizontalAlignment="Left" BorderBrush="#FF888888">
                            <TextBox.Tag>Replace to Text</TextBox.Tag>
                        </TextBox>
                        <Button Content="Change" Height="20" Margin="41.5,0,72.275,3" VerticalAlignment="Bottom" BorderThickness="0" Padding="0" Foreground="#FF444444" FontSize="10.667" BorderBrush="#FF888888" d:LayoutOverrides="HorizontalAlignment" Click="OnReplaceClick">
                            <Button.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF3F3F3"/>
                                    <GradientStop Color="#FFCDCDCD" Offset="1"/>
                                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Button.Background>
                        </Button>
                        <Button Content="Change all" Height="20" Margin="0,0,3.775,3" VerticalAlignment="Bottom" BorderThickness="0" Padding="0" Foreground="#FF444444" FontSize="10.667" BorderBrush="#FF888888" HorizontalAlignment="Right" Width="64.5" d:LayoutOverrides="HorizontalAlignment" Click="OnReplaceAllClick" >
                            <Button.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF3F3F3"/>
                                    <GradientStop Color="#FFCDCDCD" Offset="1"/>
                                    <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                                    <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Button.Background>
                        </Button>
                        <Button Content="Button" HorizontalAlignment="Left" Height="20" Margin="4.26,0,0,2.932" Style="{DynamicResource next}" VerticalAlignment="Bottom" Width="15" Click="OnDownArrorClick" ToolTip="Next"/>
                        <Label x:Name="next_label1" Content="&lt;" HorizontalAlignment="Left" IsHitTestVisible="False" Height="12.876" Margin="5.221,0,0,7.126" VerticalAlignment="Bottom" Width="8.994" Panel.ZIndex="1" Padding="0" RenderTransformOrigin="0.5,0.5" Background="Transparent" FontSize="10.667" Foreground="#FF444444" SnapsToDevicePixels="True">
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-90.0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Label.RenderTransform>
                        </Label>
                        <Button Content="Button" HorizontalAlignment="Left" Height="20" Margin="21.172,0,0,2.938" Style="{DynamicResource Previous}" VerticalAlignment="Bottom" Width="15" Click="OnUpArrowClick" ToolTip="Prev"/>
                        <Label x:Name="prev_label1" Content="&lt;" HorizontalAlignment="Left" IsHitTestVisible="False" Height="12.874" Margin="25.777,0,0,5.841" VerticalAlignment="Bottom" Width="8.998" Panel.ZIndex="1" Padding="0" RenderTransformOrigin="0.5,0.5" Background="Transparent" FontSize="10.667" Foreground="#FF444444" SnapsToDevicePixels="True">
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Label.RenderTransform>
                        </Label>
                    </Grid>
                </Expander>
            </Grid>
        </Canvas>
    </StackPanel>
</UserControl>
